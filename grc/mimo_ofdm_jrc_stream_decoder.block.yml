id: mimo_ofdm_jrc_stream_decoder
label: Data Stream Decoder
category: '[MIMO OFDM JRC]'

templates:
  imports: import mimo_ofdm_jrc
  make: mimo_ofdm_jrc.stream_decoder(${n_data_carriers}, ${stats_path}, ${stats_record}, ${debug})

  callbacks:
  - set_stats_record(${stats_record})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
-   id: n_data_carriers
    label: Number of Data Subcarriers
    dtype: int
-   id: stats_path
    label: Path to Comm. Stats
    dtype: string
    default: '""'
    # hide: part
-   id: stats_record
    label: Record Stats
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
-   id: debug
    label: Debug
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
-   domain: stream
    dtype: complex
    vlen: ${ n_data_carriers }

outputs:
-   domain: stream
    dtype: float
    label: per
    multiplicity: '1'
    optional: true
-   domain: message
    id: sym
    optional: true
-   domain: message
    id: stats
    optional: true


#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
