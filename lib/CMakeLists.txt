# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-mimo_ofdm_jrc
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup the QT file generations stuff
########################################################################
set(QTGUI_MOC_HEADERS
    heatmap_plot.h
    time_plot.h)
QT5_WRAP_CPP(QTGUI_MOC_OUTFILES ${QTGUI_MOC_HEADERS})


# include_directories( ${EIGEN_INC_DIR} )
# include_directories( ${EIGEN_INC_DIR} )


########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX
list(APPEND mimo_ofdm_jrc_sources
    ${QTGUI_MOC_OUTFILES}
    viterbi_decoder.cc
    utils.cc
    heatmap_plot.cc
    fft_peak_detect_impl.cc
    frame_detector_impl.cc
    frame_sync_impl.cc
    gui_heatmap_plot_impl.cc
    gui_time_plot_impl.cc
    matrix_transpose_impl.cc
    mimo_ofdm_equalizer_impl.cc
    mimo_ofdm_radar_impl.cc
    mimo_precoder_impl.cc
    moving_avg_impl.cc
    time_plot.cc
    ofdm_cyclic_prefix_remover_impl.cc
    ofdm_frame_generator_impl.cc
    range_angle_estimator_impl.cc
    range_angle_raster_data.cc
    stream_decoder_impl.cc
    stream_encoder_impl.cc
    target_simulator_impl.cc
    usrp_mimo_trx_impl.cc
    zero_pad_impl.cc
    )

set(mimo_ofdm_jrc_sources "${mimo_ofdm_jrc_sources}" PARENT_SCOPE)
if(NOT mimo_ofdm_jrc_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT mimo_ofdm_jrc_sources)

add_library(gnuradio-mimo_ofdm_jrc SHARED ${mimo_ofdm_jrc_sources})
target_link_libraries(gnuradio-mimo_ofdm_jrc 
    gnuradio::gnuradio-runtime
    ${GR_VOLK_LIB} 
    fftw3f::fftw3f 
    gnuradio::gnuradio-fft 
    UHD::UHD 
    qwt::qwt 
    Qt5::Widgets
    gnuradio::gnuradio-filter
    gnuradio::gnuradio-blocks
    gnuradio::gnuradio-analog
    gnuradio::gnuradio-digital
    Eigen3::Eigen)
    
    
target_include_directories(gnuradio-mimo_ofdm_jrc
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-mimo_ofdm_jrc PROPERTIES DEFINE_SYMBOL "gnuradio_mimo_ofdm_jrc_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-mimo_ofdm_jrc PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-mimo_ofdm_jrc)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_mimo_ofdm_jrc_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-mimo_ofdm_jrc)

if(NOT test_mimo_ofdm_jrc_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_mimo_ofdm_jrc_sources)

foreach(qa_file ${test_mimo_ofdm_jrc_sources})
    GR_ADD_CPP_TEST("mimo_ofdm_jrc_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
